Traceback (most recent call last):
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/rmf_building_map_tools/building_crowdsim", line 33, in <module>
Traceback (most recent call last):
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/rmf_building_map_tools/building_crowdsim", line 33, in <module>
    sys.exit(load_entry_point('rmf-building-map-tools==1.11.0', 'console_scripts', 'building_crowdsim')())
Traceback (most recent call last):
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/rmf_building_map_tools/building_map_generator", line 33, in <module>
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_crowdsim.py", line 42, in main
    sys.exit(load_entry_point('rmf-building-map-tools==1.11.0', 'console_scripts', 'building_crowdsim')())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_crowdsim.py", line 45, in main
Traceback (most recent call last):
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/rmf_building_map_tools/building_crowdsim", line 33, in <module>
    sys.exit(load_entry_point('rmf-building-map-tools==1.11.0', 'console_scripts', 'building_map_generator')())
    sys.exit(load_entry_point('rmf-building-map-tools==1.11.0', 'console_scripts', 'building_crowdsim')())
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_map_generator/building_map_generator.py", line 25, in main
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_crowdsim.py", line 42, in main
Traceback (most recent call last):
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/rmf_building_map_tools/building_crowdsim", line 33, in <module>
    g.generate_nav(args.INPUT, args.OUTPUT_DIR)
    navmesh_main(
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/navmesh/navmesh_generator.py", line 93, in navmesh_main
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_map/generator.py", line 54, in generate_nav
    configfile_main(
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/config/configfile_generator.py", line 137, in configfile_main
    sys.exit(load_entry_point('rmf-building-map-tools==1.11.0', 'console_scripts', 'building_crowdsim')())
    building = self.parse_editor_yaml(input_filename)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/rmf_building_map_tools/building_crowdsim", line 25, in importlib_load_entry_point
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_map/generator.py", line 17, in parse_editor_yaml
    y = yaml.load(f, Loader=yaml.CLoader)
    return next(matches).load()
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    yaml_parse = BuildingYamlParse(map_file)
  File "/usr/lib/python3/dist-packages/yaml/__init__.py", line 81, in load
           ^^^^^^^^^^^^^^^^^^^^
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_yaml_parse.py", line 57, in __init__
    yaml_parse = BuildingYamlParse(map_file)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    navmesh_main(
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_yaml_parse.py", line 57, in __init__
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/navmesh/navmesh_generator.py", line 93, in navmesh_main
    self.yaml_node = yaml.load(f, yaml.SafeLoader)
    yaml_parse = BuildingYamlParse(map_file)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/__init__.py", line 81, in load
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_yaml_parse.py", line 57, in __init__
    self.yaml_node = yaml.load(f, yaml.SafeLoader)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    self.yaml_node = yaml.load(f, yaml.SafeLoader)
  File "/usr/lib/python3/dist-packages/yaml/__init__.py", line 81, in load
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/__init__.py", line 81, in load
  File "/usr/lib/python3.12/importlib/metadata/__init__.py", line 205, in load
    return loader.get_single_data()
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 51, in get_single_data
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 49, in get_single_data
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 49, in get_single_data
    return loader.get_single_data()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 49, in get_single_data
    module = import_module(match.group('module'))
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/importlib/__init__.py", line 90, in import_module
    node = self.get_single_node()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 36, in get_single_node
    node = self.get_single_node()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 36, in get_single_node
gmake[1]: *** [CMakeFiles/Makefile2:354: CMakeFiles/generate_clinic_nav_graphs.dir/all] Interrupt
    return self.construct_document(node)
    document = self.compose_document()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    document = self.compose_document()
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 60, in construct_document
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 55, in compose_document
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 55, in compose_document
    for dummy in generator:
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 413, in construct_yaml_map
    node = self.compose_node(None, None)
    node = self.compose_node(None, None)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    value = self.construct_mapping(node)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 218, in construct_mapping
    node = self.compose_mapping_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
    return super().construct_mapping(node, deep=deep)
    node = self.compose_mapping_node(anchor)
    item_value = self.compose_node(node, item_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/constructor.py", line 140, in construct_mapping
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    if not isinstance(key, collections.abc.Hashable):
    node = self.compose_mapping_node(anchor)
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen abc>", line 119, in __instancecheck__
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
    item_value = self.compose_node(node, item_key)
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_crowdsim.py", line 33, in <module>
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    node = self.get_single_node()
           ^^^^^^^^^^^^^^^^^^^^^^
    node = self.compose_mapping_node(anchor)
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 36, in get_single_node
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
    item_value = self.compose_node(node, item_key)
    document = self.compose_document()
    item_value = self.compose_node(node, item_key)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 82, in compose_node
               ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 55, in compose_document
    from .config.configfile_generator import configfile_main
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/config/configfile_generator.py", line 15, in <module>
    node = self.compose_sequence_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 111, in compose_sequence_node
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    node = self.compose_node(None, None)
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    node.value.append(self.compose_node(node, index))
    node = self.compose_mapping_node(anchor)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 82, in compose_node
    node = self.compose_mapping_node(anchor)
    from building_crowdsim.building_yaml_parse import\
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_crowdsim/building_yaml_parse.py", line 6, in <module>
    node = self.compose_sequence_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 111, in compose_sequence_node
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
    node.value.append(self.compose_node(node, index))
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    item_value = self.compose_node(node, item_key)
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    node = self.compose_mapping_node(anchor)
    from building_map.building import Building
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/rmf_demos_ws/install/rmf_building_map_tools/lib/python3.12/site-packages/building_map/building.py", line 5, in <module>
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 127, in compose_mapping_node
    node = self.compose_mapping_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    while not self.check_event(MappingEndEvent):
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
    item_value = self.compose_node(node, item_key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 98, in check_event
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    item_value = self.compose_node(node, item_key)
    node = self.compose_mapping_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
    item_value = self.compose_node(node, item_key)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 82, in compose_node
    self.current_event = self.state()
                         ^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 540, in parse_flow_mapping_first_key
    node = self.compose_mapping_node(anchor)
    import numpy as np
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
  File "/usr/lib/python3/dist-packages/numpy/__init__.py", line 159, in <module>
    item_value = self.compose_node(node, item_key)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 82, in compose_node
    node = self.compose_sequence_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 110, in compose_sequence_node
    node = self.compose_sequence_node(anchor)
    return self.parse_flow_mapping_key(first=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 111, in compose_sequence_node
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 556, in parse_flow_mapping_key
    while not self.check_event(SequenceEndEvent):
    node.value.append(self.compose_node(node, index))
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 82, in compose_node
    return self.parse_flow_node()
    node = self.compose_sequence_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 268, in parse_flow_node
    from . import ma
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 111, in compose_sequence_node
  File "/usr/lib/python3/dist-packages/numpy/ma/__init__.py", line 42, in <module>
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    return self.parse_node()
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 98, in check_event
           ^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 274, in parse_node
    node.value.append(self.compose_node(node, index))
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 84, in compose_node
    self.current_event = self.state()
    if self.check_token(AliasToken):
                         ^^^^^^^^^^^^
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 384, in parse_block_sequence_entry
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 121, in check_token
    node = self.compose_mapping_node(anchor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 133, in compose_mapping_node
    item_value = self.compose_node(node, item_key)
    if not self.check_token(BlockEntryToken, BlockEndToken):
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/composer.py", line 64, in compose_node
    from . import core
    if self.check_event(AliasEvent):
  File "/usr/lib/python3/dist-packages/numpy/ma/core.py", line 8450, in <module>
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 98, in check_event
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 116, in check_token
    self.current_event = self.state()
                         ^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 574, in parse_flow_mapping_value
    self.fetch_more_tokens()
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 207, in fetch_more_tokens
    return self.parse_flow_node()
           ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 268, in parse_flow_node
    return self.parse_node()
           ^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/parser.py", line 337, in parse_node
    elif self.check_token(FlowSequenceStartToken):
    return self.fetch_flow_mapping_end()
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 115, in check_token
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 451, in fetch_flow_mapping_end
    while self.need_more_tokens():
          ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 153, in need_more_tokens
    self.fetch_flow_collection_end(FlowMappingEndToken)
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 468, in fetch_flow_collection_end
    if self.next_possible_simple_key() == self.tokens_taken:
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/yaml/scanner.py", line 264, in next_possible_simple_key
    self.tokens.append(TokenClass(start_mark, end_mark))
    def next_possible_simple_key(self):

                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
KeyboardInterrupt
    arange = _convert2ma(
             ^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/numpy/ma/core.py", line 8391, in __init__
    if isinstance(self.tokens[0], choice):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
    self.__doc__ = self.getdoc(np_ret, np_ma_ret)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/numpy/ma/core.py", line 8397, in getdoc
    sig = get_object_signature(self._func)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/numpy/ma/core.py", line 137, in get_object_signature
    sig = formatargspec(*getargspec(obj))
                         ^^^^^^^^^^^^^^^
  File "/usr/lib/python3/dist-packages/numpy/_utils/_inspect.py", line 109, in getargspec
    raise TypeError('arg is not a Python function')
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
gmake[2]: *** [CMakeFiles/generate_icc_kyoto_crowdsim.dir/build.make:73: icc_kyoto_crowdsim] Error 254
gmake[1]: *** [CMakeFiles/Makefile2:431: CMakeFiles/generate_icc_kyoto_crowdsim.dir/all] Interrupt
gmake[2]: *** [CMakeFiles/generate_hotel_crowdsim.dir/build.make:73: hotel_crowdsim] Error 254
gmake[2]: *** [CMakeFiles/generate_hotel_nav_graphs.dir/build.make:73: maps/hotel/nav_graphs/phony] Error 254
gmake[1]: *** [CMakeFiles/Makefile2:405: CMakeFiles/generate_hotel_nav_graphs.dir/all] Interrupt
gmake[1]: *** [CMakeFiles/Makefile2:379: CMakeFiles/generate_hotel_crowdsim.dir/all] Interrupt
gmake: *** [Makefile:146: all] Interrupt
gmake[2]: *** [CMakeFiles/generate_clinic_crowdsim.dir/build.make:73: clinic_crowdsim] Interrupt
gmake[2]: *** [CMakeFiles/generate_airport_terminal_crowdsim.dir/build.make:73: airport_terminal_crowdsim] Interrupt
